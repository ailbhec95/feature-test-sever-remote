"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InMemoryCohortStorage = void 0;
const cohort_1 = require("../../types/cohort");
class InMemoryCohortStorage {
    constructor() {
        this.store = {};
    }
    getAllCohortIds() {
        return new Set(Object.keys(this.store));
    }
    getCohort(cohortId) {
        return cohortId in this.store ? this.store[cohortId] : undefined;
    }
    getCohortsForUser(userId, cohortIds) {
        return this.getCohortsForGroup(cohort_1.USER_GROUP_TYPE, userId, cohortIds);
    }
    getCohortsForGroup(groupType, groupName, cohortIds) {
        var _a, _b;
        const validCohortIds = new Set();
        for (const cohortId of cohortIds) {
            if (((_a = this.store[cohortId]) === null || _a === void 0 ? void 0 : _a.groupType) == groupType &&
                ((_b = this.store[cohortId]) === null || _b === void 0 ? void 0 : _b.memberIds.has(groupName))) {
                validCohortIds.add(cohortId);
            }
        }
        return validCohortIds;
    }
    put(cohort) {
        this.store[cohort.cohortId] = cohort;
    }
    delete(cohortId) {
        delete this.store[cohortId];
    }
}
exports.InMemoryCohortStorage = InMemoryCohortStorage;
