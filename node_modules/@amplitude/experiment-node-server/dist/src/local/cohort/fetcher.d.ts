import { Cohort } from '../../types/cohort';
import { HttpClient } from '../../types/transport';
import { SdkCohortApi } from './cohort-api';
export declare const COHORT_CONFIG_TIMEOUT = 20000;
export declare class CohortFetcher {
    private readonly logger;
    readonly cohortApi: SdkCohortApi;
    readonly maxCohortSize: number;
    readonly cohortRequestDelayMillis: number;
    private readonly inProgressCohorts;
    private readonly mutex;
    private readonly executor;
    constructor(apiKey: string, secretKey: string, httpClient: HttpClient, serverUrl?: string, maxCohortSize?: number, cohortRequestDelayMillis?: number, debug?: boolean);
    static getKey(cohortId: string, lastModified?: number): string;
    fetch(cohortId: string, lastModified?: number): Promise<Cohort | undefined>;
}
