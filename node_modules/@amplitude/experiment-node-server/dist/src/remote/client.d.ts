import { ExperimentConfig, RemoteEvaluationConfig } from '../types/config';
import { FetchOptions } from '../types/fetch';
import { ExperimentUser } from '../types/user';
import { Variant, Variants } from '../types/variant';
/**
 * Experiment client for fetching variants for a user remotely.
 * @category Core Usage
 */
export declare class RemoteEvaluationClient {
    private readonly apiKey;
    private readonly config;
    private readonly evaluationApi;
    /**
     * Creates a new RemoteEvaluationClient instance.
     *
     * @param apiKey The environment API Key
     * @param config See {@link ExperimentConfig} for config options
     */
    constructor(apiKey: string, config?: RemoteEvaluationConfig);
    /**
     * Fetch remote evaluated variants for a user. This function can
     * automatically retry the request on failure (if configured), and will
     * throw the original error if all retries fail.
     *
     * Unlike {@link fetch}, this function returns a default variant object
     * if the flag or experiment was evaluated, but the user was not assigned a
     * variant (i.e. 'off').
     *
     * @param user The user to fetch variants for.
     * @param options Options to configure the fetch request.
     */
    fetchV2(user: ExperimentUser, options?: FetchOptions): Promise<Record<string, Variant>>;
    /**
     * Fetch all variants for a user.
     *
     * This method will automatically retry if configured (default).
     *
     * @param user The {@link ExperimentUser} context
     * @param options The {@link FetchOptions} for this specific fetch request.
     * @return The {@link Variants} for the user on success, empty
     * {@link Variants} on error.
     * @deprecated use fetchV2 instead
     */
    fetch(user: ExperimentUser, options?: FetchOptions): Promise<Variants>;
    private doFetch;
    private retryFetch;
    private addContext;
    private debug;
    private shouldRetryFetch;
}
/**
 * @deprecated use {@link RemoteEvaluationClient}.
 */
export declare class ExperimentClient extends RemoteEvaluationClient {
    constructor(apiKey: string, config: ExperimentConfig);
}
